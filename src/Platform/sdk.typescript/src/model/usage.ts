/**
 * 2S-API
 * The 2S-API is a RESTful API for interacting with the 2S Platform.
 *
 * The version of the OpenAPI document: 0.8.26.4237
 * Contact: kobr.ales@outlook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class Usage {
    'subjectKey'?: string;
    'responsibilityKey'?: string;
    'subjectName'?: string;
    'responsibilityName'?: string;
    'executions'?: Array<string>;
    'projectName'?: string;
    'viewName'?: string;
    'annotationKey'?: string;
    'name'?: string;
    'annotationType'?: Usage.AnnotationTypeEnum = Usage.AnnotationTypeEnum.Responsibility;
    'isDisabled'?: boolean | null;
    'validFrom'?: Date | null;
    'expiresAt'?: Date | null;
    'timeZone'?: string;
    'title'?: string;
    'description'?: string;
    'documentationLink'?: string;
    'labels'?: Array<string>;
    'values'?: { [key: string]: object; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "subjectKey",
            "baseName": "SubjectKey",
            "type": "string"
        },
        {
            "name": "responsibilityKey",
            "baseName": "ResponsibilityKey",
            "type": "string"
        },
        {
            "name": "subjectName",
            "baseName": "SubjectName",
            "type": "string"
        },
        {
            "name": "responsibilityName",
            "baseName": "ResponsibilityName",
            "type": "string"
        },
        {
            "name": "executions",
            "baseName": "Executions",
            "type": "Array<string>"
        },
        {
            "name": "projectName",
            "baseName": "ProjectName",
            "type": "string"
        },
        {
            "name": "viewName",
            "baseName": "ViewName",
            "type": "string"
        },
        {
            "name": "annotationKey",
            "baseName": "AnnotationKey",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string"
        },
        {
            "name": "annotationType",
            "baseName": "AnnotationType",
            "type": "Usage.AnnotationTypeEnum"
        },
        {
            "name": "isDisabled",
            "baseName": "IsDisabled",
            "type": "boolean"
        },
        {
            "name": "validFrom",
            "baseName": "ValidFrom",
            "type": "Date"
        },
        {
            "name": "expiresAt",
            "baseName": "ExpiresAt",
            "type": "Date"
        },
        {
            "name": "timeZone",
            "baseName": "TimeZone",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "Title",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "Description",
            "type": "string"
        },
        {
            "name": "documentationLink",
            "baseName": "DocumentationLink",
            "type": "string"
        },
        {
            "name": "labels",
            "baseName": "Labels",
            "type": "Array<string>"
        },
        {
            "name": "values",
            "baseName": "Values",
            "type": "{ [key: string]: object; }"
        }    ];

    static getAttributeTypeMap() {
        return Usage.attributeTypeMap;
    }
}

export namespace Usage {
    export enum AnnotationTypeEnum {
        Responsibility = <any> 'Responsibility',
        Unit = <any> 'Unit',
        Subject = <any> 'Subject',
        Usage = <any> 'Usage',
        Context = <any> 'Context',
        Execution = <any> 'Execution'
    }
}
