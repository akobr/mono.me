/*
 * 2S-API
 *
 * The 2S-API is a RESTful API for interacting with the 2S Platform.
 *
 * The version of the OpenAPI document: 0.8.26.4237
 * Contact: kobr.ales@outlook.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = _42.Platform.Sdk.Client.OpenAPIDateConverter;

namespace _42.Platform.Sdk.Model
{
    /// <summary>
    /// AccessPoint
    /// </summary>
    [DataContract(Name = "AccessPoint")]
    public partial class AccessPoint : IValidatableObject
    {
        /// <summary>
        /// Defines Inner
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum InnerEnum
        {
            /// <summary>
            /// Enum None for value: None
            /// </summary>
            [EnumMember(Value = "None")]
            None = 1,

            /// <summary>
            /// Enum Reader for value: Reader
            /// </summary>
            [EnumMember(Value = "Reader")]
            Reader = 2,

            /// <summary>
            /// Enum Contributor for value: Contributor
            /// </summary>
            [EnumMember(Value = "Contributor")]
            Contributor = 3,

            /// <summary>
            /// Enum Administrator for value: Administrator
            /// </summary>
            [EnumMember(Value = "Administrator")]
            Administrator = 4,

            /// <summary>
            /// Enum Owner for value: Owner
            /// </summary>
            [EnumMember(Value = "Owner")]
            Owner = 5
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AccessPoint" /> class.
        /// </summary>
        /// <param name="key">key.</param>
        /// <param name="accessMap">accessMap.</param>
        public AccessPoint(string key = default(string), Dictionary<string, InnerEnum> accessMap = default(Dictionary<string, InnerEnum>))
        {
            this.Key = key;
            this.AccessMap = accessMap;
        }

        /// <summary>
        /// Gets or Sets Key
        /// </summary>
        [DataMember(Name = "Key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// Gets or Sets AccessMap
        /// </summary>
        [DataMember(Name = "AccessMap", EmitDefaultValue = false)]
        public Dictionary<string, AccessPoint.InnerEnum> AccessMap { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessPoint {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  AccessMap: ").Append(AccessMap).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
